{{- if .Values.prometheus.enabled }}
# Prometheus Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "supernova.fullname" . }}-prometheus
  labels:
    {{- include "supernova.labels" . | nindent 4 }}
    app.kubernetes.io/component: prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "supernova.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: prometheus
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        {{- include "supernova.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: prometheus
    spec:
      serviceAccountName: {{ include "supernova.serviceAccountName" . }}
      containers:
      - name: prometheus
        image: prom/prometheus:latest
        imagePullPolicy: IfNotPresent
        args:
        - "--config.file=/etc/prometheus/prometheus.yml"
        - "--storage.tsdb.path=/prometheus"
        - "--web.console.libraries=/usr/share/prometheus/console_libraries"
        - "--web.console.templates=/usr/share/prometheus/consoles"
        - "--web.enable-lifecycle"
        ports:
        - containerPort: 9090
          name: http
        readinessProbe:
          httpGet:
            path: /-/ready
            port: http
          initialDelaySeconds: 30
          timeoutSeconds: 30
        livenessProbe:
          httpGet:
            path: /-/healthy
            port: http
          initialDelaySeconds: 30
          timeoutSeconds: 30
        resources:
          limits:
            cpu: 500m
            memory: 2Gi
          requests:
            cpu: 200m
            memory: 1Gi
        volumeMounts:
        - name: config
          mountPath: /etc/prometheus
        - name: prometheus-data
          mountPath: /prometheus
      volumes:
      - name: config
        configMap:
          name: {{ include "supernova.fullname" . }}-config
          items:
          - key: prometheus-config.yml
            path: prometheus.yml
      - name: prometheus-data
        persistentVolumeClaim:
          claimName: {{ include "supernova.fullname" . }}-prometheus
      {{- with .Values.prometheus.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.prometheus.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.prometheus.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
---
# Prometheus Service
apiVersion: v1
kind: Service
metadata:
  name: {{ include "supernova.fullname" . }}-prometheus
  labels:
    {{- include "supernova.labels" . | nindent 4 }}
    app.kubernetes.io/component: prometheus
spec:
  type: {{ .Values.prometheus.service.type }}
  ports:
  - port: {{ .Values.prometheus.service.port }}
    targetPort: http
    protocol: TCP
    name: http
  selector:
    {{- include "supernova.selectorLabels" . | nindent 4 }}
    app.kubernetes.io/component: prometheus
---
# Prometheus PVC
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ include "supernova.fullname" . }}-prometheus
  labels:
    {{- include "supernova.labels" . | nindent 4 }}
    app.kubernetes.io/component: prometheus
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: {{ .Values.global.storageClass }}
  resources:
    requests:
      storage: {{ .Values.prometheus.persistence.size }}
{{- end }}

{{- if .Values.alertManager.enabled }}
---
# AlertManager Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "supernova.fullname" . }}-alertmanager
  labels:
    {{- include "supernova.labels" . | nindent 4 }}
    app.kubernetes.io/component: alertmanager
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "supernova.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: alertmanager
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        {{- include "supernova.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: alertmanager
    spec:
      serviceAccountName: {{ include "supernova.serviceAccountName" . }}
      containers:
      - name: alertmanager
        image: prom/alertmanager:latest
        imagePullPolicy: IfNotPresent
        args:
        - "--config.file=/etc/alertmanager/alertmanager.yml"
        - "--storage.path=/alertmanager"
        ports:
        - containerPort: 9093
          name: http
        readinessProbe:
          httpGet:
            path: /-/ready
            port: http
          initialDelaySeconds: 30
          timeoutSeconds: 30
        livenessProbe:
          httpGet:
            path: /-/healthy
            port: http
          initialDelaySeconds: 30
          timeoutSeconds: 30
        resources:
          limits:
            cpu: 200m
            memory: 256Mi
          requests:
            cpu: 100m
            memory: 128Mi
        volumeMounts:
        - name: config
          mountPath: /etc/alertmanager
        - name: alertmanager-data
          mountPath: /alertmanager
      volumes:
      - name: config
        configMap:
          name: {{ include "supernova.fullname" . }}-config
          items:
          - key: alertmanager-config.yml
            path: alertmanager.yml
      - name: alertmanager-data
        persistentVolumeClaim:
          claimName: {{ include "supernova.fullname" . }}-alertmanager
      {{- with .Values.alertManager.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.alertManager.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.alertManager.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
---
# AlertManager Service
apiVersion: v1
kind: Service
metadata:
  name: {{ include "supernova.fullname" . }}-alertmanager
  labels:
    {{- include "supernova.labels" . | nindent 4 }}
    app.kubernetes.io/component: alertmanager
spec:
  type: ClusterIP
  ports:
  - port: 9093
    targetPort: http
    protocol: TCP
    name: http
  selector:
    {{- include "supernova.selectorLabels" . | nindent 4 }}
    app.kubernetes.io/component: alertmanager
---
# AlertManager PVC
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ include "supernova.fullname" . }}-alertmanager
  labels:
    {{- include "supernova.labels" . | nindent 4 }}
    app.kubernetes.io/component: alertmanager
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: {{ .Values.global.storageClass }}
  resources:
    requests:
      storage: {{ .Values.alertManager.persistence.size }}
{{- end }} 