{{- if .Values.grafana.enabled }}
# Grafana Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "supernova.fullname" . }}-grafana
  labels:
    {{- include "supernova.labels" . | nindent 4 }}
    app.kubernetes.io/component: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "supernova.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: grafana
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        {{- include "supernova.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: grafana
    spec:
      serviceAccountName: {{ include "supernova.serviceAccountName" . }}
      securityContext:
        fsGroup: 472
        runAsUser: 472
      containers:
      - name: grafana
        image: grafana/grafana:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3000
          name: http
        readinessProbe:
          httpGet:
            path: /api/health
            port: http
          initialDelaySeconds: 30
          timeoutSeconds: 30
        livenessProbe:
          httpGet:
            path: /api/health
            port: http
          initialDelaySeconds: 60
          timeoutSeconds: 30
        resources:
          limits:
            cpu: 500m
            memory: 1Gi
          requests:
            cpu: 200m
            memory: 512Mi
        env:
        - name: GF_SECURITY_ADMIN_PASSWORD
          value: {{ .Values.grafana.adminPassword | quote }}
        - name: GF_USERS_ALLOW_SIGN_UP
          value: "false"
        - name: GF_INSTALL_PLUGINS
          value: "grafana-piechart-panel"
        volumeMounts:
        - name: grafana-data
          mountPath: /var/lib/grafana
        - name: grafana-provisioning
          mountPath: /etc/grafana/provisioning
      volumes:
      - name: grafana-provisioning
        configMap:
          name: {{ include "supernova.fullname" . }}-grafana-provisioning
      - name: grafana-data
        persistentVolumeClaim:
          claimName: {{ include "supernova.fullname" . }}-grafana
      {{- with .Values.grafana.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.grafana.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.grafana.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
---
# Grafana Service
apiVersion: v1
kind: Service
metadata:
  name: {{ include "supernova.fullname" . }}-grafana
  labels:
    {{- include "supernova.labels" . | nindent 4 }}
    app.kubernetes.io/component: grafana
spec:
  type: {{ .Values.grafana.service.type }}
  ports:
  - port: {{ .Values.grafana.service.port }}
    targetPort: http
    protocol: TCP
    name: http
  selector:
    {{- include "supernova.selectorLabels" . | nindent 4 }}
    app.kubernetes.io/component: grafana
---
# Grafana PVC
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ include "supernova.fullname" . }}-grafana
  labels:
    {{- include "supernova.labels" . | nindent 4 }}
    app.kubernetes.io/component: grafana
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: {{ .Values.global.storageClass }}
  resources:
    requests:
      storage: {{ .Values.grafana.persistence.size }}
---
# Grafana Provisioning ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "supernova.fullname" . }}-grafana-provisioning
  labels:
    {{- include "supernova.labels" . | nindent 4 }}
    app.kubernetes.io/component: grafana
data:
  datasources.yaml: |
    apiVersion: 1
    datasources:
    - name: Prometheus
      type: prometheus
      url: http://{{ include "supernova.fullname" . }}-prometheus:{{ .Values.prometheus.service.port }}
      access: proxy
      isDefault: true
      editable: false
  dashboards.yaml: |
    apiVersion: 1
    providers:
    - name: 'default'
      orgId: 1
      folder: ''
      type: file
      disableDeletion: false
      editable: true
      updateIntervalSeconds: 10
      options:
        path: /var/lib/grafana/dashboards
  supernova-overview.json: |
    {
      "annotations": {
        "list": [
          {
            "builtIn": 1,
            "datasource": "-- Grafana --",
            "enable": true,
            "hide": true,
            "iconColor": "rgba(0, 211, 255, 1)",
            "name": "Annotations & Alerts",
            "type": "dashboard"
          }
        ]
      },
      "editable": true,
      "gnetId": null,
      "graphTooltip": 0,
      "id": 1,
      "links": [],
      "panels": [
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "Prometheus",
          "fieldConfig": {
            "defaults": {
              "custom": {}
            },
            "overrides": []
          },
          "fill": 1,
          "fillGradient": 0,
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 0
          },
          "hiddenSeries": false,
          "id": 2,
          "legend": {
            "avg": false,
            "current": false,
            "max": false,
            "min": false,
            "show": true,
            "total": false,
            "values": false
          },
          "lines": true,
          "linewidth": 1,
          "nullPointMode": "null",
          "options": {
            "dataLinks": []
          },
          "percentage": false,
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "supernova_block_height",
              "interval": "",
              "legendFormat": "Block Height",
              "refId": "A"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Block Height",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        }
      ],
      "refresh": "10s",
      "schemaVersion": 25,
      "style": "dark",
      "tags": [],
      "templating": {
        "list": []
      },
      "time": {
        "from": "now-6h",
        "to": "now"
      },
      "timepicker": {
        "refresh_intervals": [
          "5s",
          "10s",
          "30s",
          "1m",
          "5m",
          "15m",
          "30m",
          "1h",
          "2h",
          "1d"
        ]
      },
      "timezone": "",
      "title": "Supernova Overview",
      "uid": "supernova-overview",
      "version": 1
    }
{{- if .Values.grafana.ingress.enabled }}
---
# Grafana Ingress
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ include "supernova.fullname" . }}-grafana
  labels:
    {{- include "supernova.labels" . | nindent 4 }}
    app.kubernetes.io/component: grafana
  {{- with .Values.grafana.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if .Values.grafana.ingress.tls }}
  tls:
    {{- range .Values.grafana.ingress.tls }}
    - hosts:
        {{- range .hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .secretName }}
    {{- end }}
  {{- end }}
  rules:
    {{- range .Values.grafana.ingress.hosts }}
    - host: {{ .host | quote }}
      http:
        paths:
          {{- range .paths }}
          - path: {{ .path }}
            pathType: {{ .pathType }}
            backend:
              service:
                name: {{ include "supernova.fullname" $ }}-grafana
                port:
                  name: http
          {{- end }}
    {{- end }}
{{- end }}
{{- end }} 