{{- if .Values.fullNode.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "supernova.fullname" . }}-fullnode
  labels:
    {{- include "supernova.labels" . | nindent 4 }}
    app.kubernetes.io/component: full-node
spec:
  {{- if not .Values.fullNode.autoscaling.enabled }}
  replicas: {{ .Values.fullNode.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "supernova.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: full-node
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        {{- include "supernova.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: full-node
      annotations:
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "supernova.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
      - name: init-dirs
        image: busybox:latest
        command: ['sh', '-c', 'mkdir -p /data /checkpoints /backups /logs && chown -R 1000:1000 /data /checkpoints /backups /logs']
        volumeMounts:
        - name: data
          mountPath: /data
        - name: checkpoints
          mountPath: /checkpoints
        - name: backups
          mountPath: /backups
        - name: logs
          mountPath: /logs
      containers:
      - name: supernova
        securityContext:
          {{- toYaml .Values.securityContext | nindent 12 }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        args: ["--config", "/config/node.toml"]
        ports:
        - containerPort: {{ .Values.network.p2pPort }}
          name: p2p
        - containerPort: {{ .Values.network.rpcPort }}
          name: rpc
        - containerPort: {{ .Values.telemetry.metricsPort }}
          name: metrics
        resources:
          {{- toYaml .Values.fullNode.resources | nindent 12 }}
        readinessProbe:
          httpGet:
            path: /health
            port: {{ .Values.network.rpcPort }}
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        livenessProbe:
          httpGet:
            path: /health
            port: {{ .Values.network.rpcPort }}
          initialDelaySeconds: 60
          periodSeconds: 20
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /health
            port: {{ .Values.network.rpcPort }}
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 10
        volumeMounts:
        - name: data
          mountPath: {{ .Values.storage.dbPath | dirname }}
        - name: checkpoints
          mountPath: {{ .Values.checkpoint.dataDir }}
        - name: backups
          mountPath: {{ .Values.backup.backupDir }}
        - name: logs
          mountPath: /logs
        - name: config
          mountPath: /config
        env:
        - name: RUST_BACKTRACE
          value: "1"
        - name: RUST_LOG
          value: {{ .Values.telemetry.logLevel | quote }}
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: SUPERNOVA_DATA_DIR
          value: {{ .Values.storage.dbPath | dirname | quote }}
        - name: SUPERNOVA_CONFIG_DIR
          value: "/config"
        - name: SUPERNOVA_CHECKPOINTS_DIR
          value: {{ .Values.checkpoint.dataDir | quote }}
        - name: SUPERNOVA_BACKUPS_DIR
          value: {{ .Values.backup.backupDir | quote }}
        - name: SUPERNOVA_LOGS_DIR
          value: "/logs"
        - name: TZ
          value: "UTC"
      volumes:
      - name: config
        configMap:
          name: {{ include "supernova.fullname" . }}-config
      {{- if .Values.fullNode.persistence.data.existingClaim }}
      - name: data
        persistentVolumeClaim:
          claimName: {{ .Values.fullNode.persistence.data.existingClaim }}
      {{- else }}
      - name: data
        persistentVolumeClaim:
          claimName: {{ include "supernova.fullname" . }}-fullnode-data
      {{- end }}
      {{- if .Values.fullNode.persistence.checkpoints.existingClaim }}
      - name: checkpoints
        persistentVolumeClaim:
          claimName: {{ .Values.fullNode.persistence.checkpoints.existingClaim }}
      {{- else }}
      - name: checkpoints
        persistentVolumeClaim:
          claimName: {{ include "supernova.fullname" . }}-fullnode-checkpoints
      {{- end }}
      {{- if .Values.fullNode.persistence.backups.existingClaim }}
      - name: backups
        persistentVolumeClaim:
          claimName: {{ .Values.fullNode.persistence.backups.existingClaim }}
      {{- else }}
      - name: backups
        persistentVolumeClaim:
          claimName: {{ include "supernova.fullname" . }}-fullnode-backups
      {{- end }}
      {{- if .Values.fullNode.persistence.logs.existingClaim }}
      - name: logs
        persistentVolumeClaim:
          claimName: {{ .Values.fullNode.persistence.logs.existingClaim }}
      {{- else }}
      - name: logs
        persistentVolumeClaim:
          claimName: {{ include "supernova.fullname" . }}-fullnode-logs
      {{- end }}
      {{- with .Values.fullNode.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.fullNode.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.fullNode.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }} 