version: '3.8'

services:
  # Main blockchain node
  supernova-node-1:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    image: supernova:latest
    container_name: supernova-node-1
    restart: unless-stopped
    ports:
      - "9333:9333"  # P2P networking
      - "9332:9332"  # RPC interface
      - "9090:9090"  # Prometheus metrics
    volumes:
      - node1-data:/home/supernova/data
      - node1-checkpoints:/home/supernova/checkpoints
      - node1-backups:/home/supernova/backups
      - node1-logs:/home/supernova/logs
      - ../config/node1.toml:/home/supernova/config/default.toml
    environment:
      - RUST_LOG=info
      - NODE_NAME=node1
      - NETWORK=testnet
    networks:
      supernova-net:
        ipv4_address: 172.20.0.2
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9332/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s

  # Secondary blockchain node
  supernova-node-2:
    image: supernova:latest
    container_name: supernova-node-2
    restart: unless-stopped
    ports:
      - "19333:9333"  # P2P networking
      - "19332:9332"  # RPC interface
      - "19090:9090"  # Prometheus metrics
    volumes:
      - node2-data:/home/supernova/data
      - node2-checkpoints:/home/supernova/checkpoints
      - node2-backups:/home/supernova/backups
      - node2-logs:/home/supernova/logs
      - ../config/node2.toml:/home/supernova/config/default.toml
    environment:
      - RUST_LOG=info
      - NODE_NAME=node2
      - NETWORK=testnet
    networks:
      supernova-net:
        ipv4_address: 172.20.0.3
    depends_on:
      supernova-node-1:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9332/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s

  # Mining node
  supernova-miner:
    image: supernova:latest
    container_name: supernova-miner
    restart: unless-stopped
    command: ["--config", "/home/supernova/config/default.toml", "--mine"]
    ports:
      - "29333:9333"  # P2P networking
      - "29332:9332"  # RPC interface
      - "29090:9090"  # Prometheus metrics
    volumes:
      - miner-data:/home/supernova/data
      - miner-checkpoints:/home/supernova/checkpoints
      - miner-backups:/home/supernova/backups
      - miner-logs:/home/supernova/logs
      - ../config/miner.toml:/home/supernova/config/default.toml
    environment:
      - RUST_LOG=info
      - NODE_NAME=miner
      - NETWORK=testnet
      - MINE=true
    networks:
      supernova-net:
        ipv4_address: 172.20.0.4
    depends_on:
      supernova-node-1:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9332/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s

  # Explorer node
  supernova-explorer:
    image: supernova:latest
    container_name: supernova-explorer
    restart: unless-stopped
    ports:
      - "39333:9333"  # P2P networking
      - "39332:9332"  # RPC interface
      - "39090:9090"  # Prometheus metrics
      - "8080:8080"   # Explorer web interface
    volumes:
      - explorer-data:/home/supernova/data
      - explorer-checkpoints:/home/supernova/checkpoints
      - explorer-backups:/home/supernova/backups
      - explorer-logs:/home/supernova/logs
      - ../config/explorer.toml:/home/supernova/config/default.toml
    environment:
      - RUST_LOG=info
      - NODE_NAME=explorer
      - NETWORK=testnet
      - EXPLORER=true
    networks:
      supernova-net:
        ipv4_address: 172.20.0.5
    depends_on:
      supernova-node-1:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9332/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s

  # Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: supernova-prometheus
    restart: unless-stopped
    ports:
      - "9091:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    networks:
      supernova-net:
        ipv4_address: 172.20.0.10
    depends_on:
      supernova-node-1:
        condition: service_healthy
      supernova-node-2:
        condition: service_healthy
      supernova-miner:
        condition: service_healthy
      supernova-explorer:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s

  # Grafana for metrics visualization
  grafana:
    image: grafana/grafana:latest
    container_name: supernova-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
      - grafana-data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=supernova
      - GF_USERS_ALLOW_SIGN_UP=false
    networks:
      supernova-net:
        ipv4_address: 172.20.0.11
    depends_on:
      prometheus:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s

  # Faucet service for testnet
  supernova-faucet:
    build:
      context: ..
      dockerfile: docker/faucet.Dockerfile
    image: supernova-faucet:latest
    container_name: supernova-faucet
    restart: unless-stopped
    ports:
      - "8081:8081"
    volumes:
      - faucet-data:/home/supernova/data
      - faucet-logs:/home/supernova/logs
      - ../config/faucet.toml:/home/supernova/config/faucet.toml
    environment:
      - RUST_LOG=info
      - NODE_NAME=faucet
      - NETWORK=testnet
      - FAUCET_RPC_URL=http://supernova-node-1:9332
    networks:
      supernova-net:
        ipv4_address: 172.20.0.6
    depends_on:
      supernova-node-1:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s

  # Backup manager - handles scheduled backups across all nodes
  supernova-backup-manager:
    image: alpine:latest
    container_name: supernova-backup-manager
    restart: unless-stopped
    volumes:
      - node1-backups:/backups/node1:ro
      - node2-backups:/backups/node2:ro
      - miner-backups:/backups/miner:ro
      - explorer-backups:/backups/explorer:ro
      - backup-storage:/storage
      - ./backup-scripts:/scripts
    environment:
      - BACKUP_INTERVAL=86400  # Daily backups
      - RETENTION_DAYS=7       # Keep backups for 7 days
    entrypoint: ["/bin/sh", "-c"]
    command: |
      chmod +x /scripts/backup.sh && 
      /scripts/backup.sh
    networks:
      supernova-net:
        ipv4_address: 172.20.0.12

  # Checkpoint manager and monitor
  supernova-checkpoint-monitor:
    image: alpine:latest
    container_name: supernova-checkpoint-monitor
    restart: unless-stopped
    volumes:
      - node1-checkpoints:/checkpoints/node1:ro
      - node2-checkpoints:/checkpoints/node2:ro
      - miner-checkpoints:/checkpoints/miner:ro
      - explorer-checkpoints:/checkpoints/explorer:ro
      - checkpoint-archive:/archive
      - ./checkpoint-scripts:/scripts
    environment:
      - CHECK_INTERVAL=3600    # Hourly checkpoint verification
      - RETAIN_CHECKPOINTS=14  # Keep checkpoints for 14 days
    entrypoint: ["/bin/sh", "-c"]
    command: |
      chmod +x /scripts/verify_checkpoints.sh && 
      /scripts/verify_checkpoints.sh
    networks:
      supernova-net:
        ipv4_address: 172.20.0.13

volumes:
  node1-data:
  node1-checkpoints:
  node1-backups:
  node1-logs:
  node2-data:
  node2-checkpoints:
  node2-backups:
  node2-logs:
  miner-data:
  miner-checkpoints:
  miner-backups:
  miner-logs:
  explorer-data:
  explorer-checkpoints:
  explorer-backups:
  explorer-logs:
  faucet-data:
  faucet-logs:
  prometheus-data:
  grafana-data:
  backup-storage:
  checkpoint-archive:

networks:
  supernova-net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16 