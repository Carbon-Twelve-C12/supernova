# Supernova Blockchain Node Docker Image
# Production-ready node for testnet deployment

# Build stage
FROM rust:1.75-alpine AS builder

# Install build dependencies
RUN apk add --no-cache musl-dev openssl-dev pkgconfig git

# Create app directory
WORKDIR /usr/src/app

# Copy source code
COPY . .

# Build the application
RUN cargo build --release --bin supernova-node

# Runtime stage
FROM alpine:3.19

# Install runtime dependencies
RUN apk add --no-cache \
    openssl \
    libgcc \
    curl \
    ca-certificates \
    && rm -rf /var/cache/apk/*

# Create non-root user and group
RUN addgroup --system --gid 1001 supernova \
    && adduser --system --uid 1001 --gid 1001 --home /home/supernova supernova

# Create necessary directories
RUN mkdir -p /data/supernova /config \
    && chown -R supernova:supernova /data/supernova /config

# Copy binary from builder
COPY --from=builder /usr/src/app/target/release/supernova-node /usr/local/bin/supernova-node
RUN chmod +x /usr/local/bin/supernova-node

# Switch to non-root user
USER supernova:supernova

# Set working directory
WORKDIR /home/supernova

# Expose ports
# P2P port
EXPOSE 8333
# RPC port
EXPOSE 8332
# Lightning port
EXPOSE 9735
# Metrics port
EXPOSE 9100

# Set data directory as volume
VOLUME ["/data/supernova"]

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
    CMD curl -f http://localhost:8332/health || exit 1

# Entry point
ENTRYPOINT ["supernova-node"]

# Default arguments
CMD ["--data-dir", "/data/supernova", "--config", "/config/node.toml"] 