# Supernova Blockchain Node Docker Image
# Production-ready node for testnet deployment

FROM rust:1.75-slim AS builder

# Install build dependencies
RUN apt-get update && apt-get install -y \
    pkg-config \
    libssl-dev \
    build-essential \
    git \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Copy source code
COPY . .

# Build the node binary with optimizations
RUN cargo build --release --bin supernova-node

# Runtime stage
FROM debian:bookworm-slim

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    ca-certificates \
    libssl3 \
    && rm -rf /var/lib/apt/lists/*

# Create non-root user
RUN useradd -m -u 1000 -s /bin/bash supernova

# Copy binary from builder
COPY --from=builder /app/target/release/supernova-node /usr/local/bin/

# Create data directories
RUN mkdir -p /data/supernova /config && \
    chown -R supernova:supernova /data /config

# Switch to non-root user
USER supernova

# Expose ports
# P2P port
EXPOSE 8333
# RPC port
EXPOSE 8332
# Lightning port
EXPOSE 9735
# Metrics port
EXPOSE 9100

# Data volume
VOLUME ["/data/supernova"]

# Default configuration
ENV SUPERNOVA_NETWORK="testnet" \
    SUPERNOVA_DATA_DIR="/data/supernova" \
    SUPERNOVA_CONFIG_DIR="/config" \
    SUPERNOVA_LOG_LEVEL="info"

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD supernova-node health || exit 1

# Entry point
ENTRYPOINT ["supernova-node"]
CMD ["--network", "testnet", "--data-dir", "/data/supernova"] 